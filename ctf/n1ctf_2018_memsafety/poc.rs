#![feature(allocator_api)]
#![feature(alloc)]
extern crate alloc;

use alloc::heap::*;
fn main() {
    let layout = Layout::from_size_align(0x100, 8).unwrap();
    let new_layout = Layout::from_size_align(0x104, 8).unwrap();
    let mut heap = Heap::default();
    unsafe {
        let a = heap.alloc(layout.clone()).unwrap();
        println!("{:?}", a);
        heap.dealloc(a, layout.clone());
        heap.dealloc(a, layout.clone());
        let a = heap.alloc(layout.clone()).unwrap();
        println!("{:?}", a);
        let a = heap.realloc(a, layout.clone(), new_layout).unwrap();
        println!("{:?}", a);
        let a = heap.alloc(layout.clone()).unwrap();
        println!("{:?}", a);
    }
}